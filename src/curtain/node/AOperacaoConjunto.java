/* This file was generated by SableCC (http://www.sablecc.org/). */

package curtain.node;

import curtain.analysis.*;

@SuppressWarnings("nls")
public final class AOperacaoConjunto extends PConjunto
{
    private TColEsq _colEsq_;
    private PBasic _left_;
    private POpBin _opBin_;
    private PBasic _right_;
    private TColDir _colDir_;

    public AOperacaoConjunto()
    {
        // Constructor
    }

    public AOperacaoConjunto(
        @SuppressWarnings("hiding") TColEsq _colEsq_,
        @SuppressWarnings("hiding") PBasic _left_,
        @SuppressWarnings("hiding") POpBin _opBin_,
        @SuppressWarnings("hiding") PBasic _right_,
        @SuppressWarnings("hiding") TColDir _colDir_)
    {
        // Constructor
        setColEsq(_colEsq_);

        setLeft(_left_);

        setOpBin(_opBin_);

        setRight(_right_);

        setColDir(_colDir_);

    }

    @Override
    public Object clone()
    {
        return new AOperacaoConjunto(
            cloneNode(this._colEsq_),
            cloneNode(this._left_),
            cloneNode(this._opBin_),
            cloneNode(this._right_),
            cloneNode(this._colDir_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAOperacaoConjunto(this);
    }

    public TColEsq getColEsq()
    {
        return this._colEsq_;
    }

    public void setColEsq(TColEsq node)
    {
        if(this._colEsq_ != null)
        {
            this._colEsq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colEsq_ = node;
    }

    public PBasic getLeft()
    {
        return this._left_;
    }

    public void setLeft(PBasic node)
    {
        if(this._left_ != null)
        {
            this._left_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._left_ = node;
    }

    public POpBin getOpBin()
    {
        return this._opBin_;
    }

    public void setOpBin(POpBin node)
    {
        if(this._opBin_ != null)
        {
            this._opBin_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._opBin_ = node;
    }

    public PBasic getRight()
    {
        return this._right_;
    }

    public void setRight(PBasic node)
    {
        if(this._right_ != null)
        {
            this._right_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._right_ = node;
    }

    public TColDir getColDir()
    {
        return this._colDir_;
    }

    public void setColDir(TColDir node)
    {
        if(this._colDir_ != null)
        {
            this._colDir_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colDir_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._colEsq_)
            + toString(this._left_)
            + toString(this._opBin_)
            + toString(this._right_)
            + toString(this._colDir_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._colEsq_ == child)
        {
            this._colEsq_ = null;
            return;
        }

        if(this._left_ == child)
        {
            this._left_ = null;
            return;
        }

        if(this._opBin_ == child)
        {
            this._opBin_ = null;
            return;
        }

        if(this._right_ == child)
        {
            this._right_ = null;
            return;
        }

        if(this._colDir_ == child)
        {
            this._colDir_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._colEsq_ == oldChild)
        {
            setColEsq((TColEsq) newChild);
            return;
        }

        if(this._left_ == oldChild)
        {
            setLeft((PBasic) newChild);
            return;
        }

        if(this._opBin_ == oldChild)
        {
            setOpBin((POpBin) newChild);
            return;
        }

        if(this._right_ == oldChild)
        {
            setRight((PBasic) newChild);
            return;
        }

        if(this._colDir_ == oldChild)
        {
            setColDir((TColDir) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
