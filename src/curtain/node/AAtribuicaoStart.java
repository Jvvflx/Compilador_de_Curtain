/* This file was generated by SableCC (http://www.sablecc.org/). */

package curtain.node;

import curtain.analysis.*;

@SuppressWarnings("nls")
public final class AAtribuicaoStart extends PStart
{
    private PAtr _atr_;

    public AAtribuicaoStart()
    {
        // Constructor
    }

    public AAtribuicaoStart(
        @SuppressWarnings("hiding") PAtr _atr_)
    {
        // Constructor
        setAtr(_atr_);

    }

    @Override
    public Object clone()
    {
        return new AAtribuicaoStart(
            cloneNode(this._atr_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAtribuicaoStart(this);
    }

    public PAtr getAtr()
    {
        return this._atr_;
    }

    public void setAtr(PAtr node)
    {
        if(this._atr_ != null)
        {
            this._atr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._atr_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._atr_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._atr_ == child)
        {
            this._atr_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._atr_ == oldChild)
        {
            setAtr((PAtr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
