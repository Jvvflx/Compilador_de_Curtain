/* This file was generated by SableCC (http://www.sablecc.org/). */

package curtain.node;

import curtain.analysis.*;

@SuppressWarnings("nls")
public final class AProductionSpecifier extends PSpecifier
{
    private TProductionSpceifier _productionSpceifier_;
    private TDot _dot_;

    public AProductionSpecifier()
    {
        // Constructor
    }

    public AProductionSpecifier(
        @SuppressWarnings("hiding") TProductionSpceifier _productionSpceifier_,
        @SuppressWarnings("hiding") TDot _dot_)
    {
        // Constructor
        setProductionSpceifier(_productionSpceifier_);

        setDot(_dot_);

    }

    @Override
    public Object clone()
    {
        return new AProductionSpecifier(
            cloneNode(this._productionSpceifier_),
            cloneNode(this._dot_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAProductionSpecifier(this);
    }

    public TProductionSpceifier getProductionSpceifier()
    {
        return this._productionSpceifier_;
    }

    public void setProductionSpceifier(TProductionSpceifier node)
    {
        if(this._productionSpceifier_ != null)
        {
            this._productionSpceifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._productionSpceifier_ = node;
    }

    public TDot getDot()
    {
        return this._dot_;
    }

    public void setDot(TDot node)
    {
        if(this._dot_ != null)
        {
            this._dot_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dot_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._productionSpceifier_)
            + toString(this._dot_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._productionSpceifier_ == child)
        {
            this._productionSpceifier_ = null;
            return;
        }

        if(this._dot_ == child)
        {
            this._dot_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._productionSpceifier_ == oldChild)
        {
            setProductionSpceifier((TProductionSpceifier) newChild);
            return;
        }

        if(this._dot_ == oldChild)
        {
            setDot((TDot) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
